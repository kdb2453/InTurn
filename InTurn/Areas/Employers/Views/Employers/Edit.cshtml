@model InTurn_Model.Employer

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Employers/Views/Shared/_Employers.cshtml";
    ViewBag.Developer = "TS";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Employers", FormMethod.Post,
                new { enctype = "Multipart/form-data" }))
{
                @Html.AntiForgeryToken()
    <input type="hidden" name="Email" value=@Model.Email>

<div class="form-horizontal">
    <h4>Employer</h4>
    @if (!String.IsNullOrEmpty(Model.ImageLocation))
    {
        <img src="@Href(Model.ImageLocation)" style="width:200px; height:180px; border:solid;" />
    }
    else
    {
        <img id="employer_image" style="height:250px;width:200px;border:none;" />}

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EmployerID)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNum, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneNum, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNum, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
        </div>
    </div>


    </div>
    <p style="font-weight:bold">Change Profile Picture</p>
    <div id="uploader" class="form-group">
        <div class="col-lg-10">
            <input id="FileName" name="FileName"
                   type="file"
                   formenctype="multipart/form-data"
                   onchange="show(this)" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">

            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>

}

<div>
    @Html.ActionLink("Return Home","Index","EmployerHome")
</div>

<script type="text/javascript">
    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader(e);
                filerdr.onload = function (e) {
                $('#student_image').attr('src', e.target.result);

       }
        filerdr.readAsDataURL(input.files[0]);
        }
    }
</script>